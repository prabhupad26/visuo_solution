{"columns": ["Question", "Type", "Query", "result"], "data": [["Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.", "AI Generated SQL Query", "SELECT T1.School, T1.DOCType FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.`CDSCode` WHERE T2.`District Type` = 'Locally Funded' AND CAST(REPLACE(T2.`Enrollment (K-12)`, ',', '') AS REAL) - CAST(REPLACE(T2.`Enrollment (Ages 5-17)`, ',', '') AS REAL) > ( SELECT AVG(CAST(REPLACE(`Enrollment (K-12)`, ',', '') AS REAL) - CAST(REPLACE(`Enrollment (Ages 5-17)`, ',', '') AS REAL)) FROM frpm WHERE `District Type` = 'Locally Funded' )", "Incorrect"], ["Consider the average difference between K-12 enrollment and 15-17 enrollment of schools that are locally funded, list the names and DOC type of schools which has a difference above this average.", "Gold Standard SQL Query", "SELECT T2.School, T2.DOC FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.FundingType = 'Locally funded' AND (T1.`Enrollment (K-12)` - T1.`Enrollment (Ages 5-17)`) > (SELECT AVG(T3.`Enrollment (K-12)` - T3.`Enrollment (Ages 5-17)`) FROM frpm AS T3 INNER JOIN schools AS T4 ON T3.CDSCode = T4.CDSCode WHERE T4.FundingType = 'Locally funded')", ""], ["What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?", "AI Generated SQL Query", "SELECT CAST(SUM(IIF(SUBSTR(T3.date, -4) = '1997', T3.amount, 0)) AS REAL) * 100 / SUM(IIF(SUBSTR(T3.date, -4) = '1996', T3.amount, 0)) - 100 FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M'", "Incorrect"], ["What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?", "Gold Standard SQL Query", "SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'", ""], ["What are the elements of the toxicology and label of molecule TR060?", "AI Generated SQL Query", "SELECT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'", "Correct"], ["What are the elements of the toxicology and label of molecule TR060?", "Gold Standard SQL Query", "SELECT DISTINCT T1.element, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR060'", ""], ["What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.", "AI Generated SQL Query", "SELECT CAST(SUM(IIF(T1.element = 'H', 1, 0)) AS REAL) / COUNT(T1.element) AS ratio, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'", "Incorrect"], ["What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.", "Gold Standard SQL Query", "WITH SubQuery AS (SELECT DISTINCT T1.atom_id, T1.element, T1.molecule_id, T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.molecule_id = 'TR006') SELECT CAST(COUNT(CASE WHEN element = 'h' THEN atom_id ELSE NULL END) AS REAL) / (CASE WHEN COUNT(atom_id) = 0 THEN NULL ELSE COUNT(atom_id) END) AS ratio, label FROM SubQuery GROUP BY label", ""], ["Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.", "AI Generated SQL Query", "SELECT CAST(SUM(IIF(T3.label = '+' AND T1.element = 'H' AND T2.bond_type = '#', 1, 0)) AS REAL) * 100 / COUNT(T3.molecule_id) FROM atom AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN molecule AS T3 ON T2.molecule_id = T3.molecule_id", "Incorrect"], ["Calculate the percentage of carcinogenic molecules with triple bonded Hidrogen atoms.", "Gold Standard SQL Query", "SELECT CAST(SUM(CASE WHEN T1.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T1.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T2.element = 'h'", ""], ["For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?", "AI Generated SQL Query", "SELECT CAST(SUM(IIF(T2.isNonFoilOnly = 1, 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM set_translations AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.language = 'Japanese'", "Correct"], ["For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?", "Gold Standard SQL Query", "SELECT CAST(SUM(CASE WHEN isNonFoilOnly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM sets WHERE code IN ( SELECT setCode FROM set_translations WHERE language = 'Japanese' )", ""], ["Among all the posts posted by the most influential user, identify the percentage with a score above 50.", "AI Generated SQL Query", "SELECT CAST(SUM(IIF(T1.Score > 50, 1, 0)) AS REAL) * 100 / COUNT(T1.Id) FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id ORDER BY T2.Reputation DESC LIMIT 1", "Incorrect"], ["Among all the posts posted by the most influential user, identify the percentage with a score above 50.", "Gold Standard SQL Query", "SELECT CAST(SUM(CASE WHEN T2.Score > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Id) FROM users T1 INNER JOIN posts T2 ON T1.Id = T2.OwnerUserId INNER JOIN ( SELECT MAX(Reputation) AS max_reputation FROM users ) T3 ON T1.Reputation = T3.max_reputation", ""]]}